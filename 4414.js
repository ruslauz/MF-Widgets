"use strict";(self.webpackChunk_my_reports_widgets=self.webpackChunk_my_reports_widgets||[]).push([[4414],{4414:(n,e,t)=>{t.r(e),t.d(e,{default:()=>a});const a='\n<div class="myreports-widget-pdf page-vertical myreports-widget-BrandedVsNobranded">\n    <div class="myreports-widget-content page-vertical-content">\n        \n<div class="myreports-widget-header" >\n    Branded vs Non-Branded</div>\n\n\n\n<div class="myreports-widget-div myreports-widget-domain">\n    US | ebay.com</div>\n\n<ul class="myreports-widget-ul">\n    \n\n\n<li class="myreports-widget-li">\n    \n<div class="myreports-widget-block">\n    \n<div class="myreports-widget-block">\n    \n<span class="myreports-widget-text">\n    27.23%</span>\n</div>\n\n<div class="myreports-widget-block">\n    \n<span class="myreports-widget-text">\n    Branded Traffic</span>\n</div>\n</div>\n</li>\n\n\n\n<li class="myreports-widget-li">\n    \n<div class="myreports-widget-block">\n    \n<div class="myreports-widget-block">\n    \n<span class="myreports-widget-text">\n    72.77%</span>\n</div>\n\n<div class="myreports-widget-block">\n    \n<span class="myreports-widget-text">\n    Non-Branded Traffic</span>\n</div>\n</div>\n</li>\n</ul>\n<div class="myreports-widget-chart myreports-widget-chart-donut" id="chart-ezgi9gpo"></div>\n\n<script type="text/javascript">\n    (function () {\n            const LINE_HEIGHT_WITH_LEGEND = 33;\n            const data = [{"y":27.22585535422854,"label":"Branded","value":32836659,"percent":27.22585535422854},{"y":72.77414464577147,"label":"Non-Branded","value":87771706,"percent":72.77414464577147}];\n            const size = "m";\n            const colors = ["#2b94e1","#fe861c","#2ba800","#c3532f","#c274b4","#8c6239","#ed1c24","#00a99d","#93278f","#8cc63f","#32348e","#cb2376","#3b683d","#d35a2c","#ba9b6f"];\n\n            const hidePercents = false;\n            let outerSize = 166;\n            let innerSize = 116;\n            let height = 215;\n            const customHeight = 215;\n            const width = 397;\n            const units = \'\';\n            const hasLegend = false;\n            let centerVer = \'50%\';\n            let centerHor = \'50%\';\n\n            const caption = \'\';\n            const formatThousands = false;\n            const formatDate = false;\n            const legendWidth = \'auto\';\n\n            const chartId = \'chart-ezgi9gpo\';\n            const chartEl = document.getElementById(chartId);\n            const chartWidth = helper.getElementWidth(chartEl);\n\n            const isInteractive = false;\n\n            const labelFormatter = function (legendWidth) {\n                return function () {\n                    let val = this.value;\n                    if (formatThousands) {\n                        val = parseFloat(this.value.toFixed(2))\n                            .toString()\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \',\');\n                    } else if (formatDate) {\n                        val = helper.formatDuration(this.value);\n                    }\n\n                    const preparedPercents = this.percent ? this.percent.toFixed(2) : 0;\n                    const percent =\n                        !hidePercents && preparedPercents > 0\n                            ? \'(\' + preparedPercents + \'%)\'\n                            : \'\';\n\n                    let text = val;\n                    if (this.additionalText) {\n                        text +=\n                            \' \' +\n                            percent +\n                            \'&nbsp;<span style="color:\' +\n                            this.colorAdditionalText +\n                            \'">\' +\n                            this.additionalText +\n                            \'&nbsp;\' +\n                            units +\n                            \'</span>\';\n                    } else {\n                        text += \' \' + units + \' \' + percent;\n                    }\n\n                    return (\n                        \'<ul class="chart-legend-line">\' +\n                        \'<li class="chart-legend-label" style="width:\' +\n                        legendWidth +\n                        \'">\' +\n                        this.label +\n                        \'</li>\' +\n                        \'<li class="chart-legend-value">\' +\n                        text +\n                        \'</li>\' +\n                        \'</ul>\'\n                    );\n                };\n            };\n\n            if (size && size === \'m\') {\n                outerSize = 100;\n                innerSize = 70;\n                height = customHeight || 200;\n            }\n\n            if (hasLegend) {\n                outerSize = 120;\n                innerSize = 90;\n                height = customHeight || 150;\n                centerVer = 50;\n                centerHor = 40;\n            }\n\n            const chartOptions = {\n                credits: {\n                    enabled: false,\n                },\n                chart: {\n                    renderTo: \'chart-ezgi9gpo\',\n                    animation: isInteractive,\n                    type: \'pie\',\n                    height,\n                    width: chartWidth,\n                    margin: 0,\n                    events: {\n                        load: function (event) {\n                            if (!hasLegend) {\n                                return;\n                            }\n                            const TOTAL_MARGIN = 38;\n\n                            try {\n                                const legendItem = chartEl.querySelector(\n                                    \'div.highcharts-legend\',\n                                );\n\n                                const legendItemsParent = legendItem.firstChild.firstChild;\n                                const lastLegendItem = legendItemsParent.lastChild;\n                                const top = lastLegendItem\n                                    ? lastLegendItem.offsetTop + TOTAL_MARGIN\n                                    : TOTAL_MARGIN;\n\n                                const totalStyles = `top: ${top}px;`;\n                                const totalStr = `<div class="chart-legend-total" style="${totalStyles}"></div>`;\n                                legendItemsParent.insertAdjacentHTML(\'afterend\', totalStr);\n                            } catch (error) {\n                                console.log(error);\n                                return;\n                            }\n                        },\n                    },\n                },\n                colors,\n                legend: {\n                    enabled: true,\n                    layout: \'vertical\',\n                    align: \'left\',\n                    verticalAlign: \'top\',\n                    useHTML: true,\n                    symbolHeight: 12,\n                    symbolWidth: 12,\n                    symbolRadius: 2,\n                    x: 130,\n                    y: -20,\n                    lineHeight: 22,\n                    itemMarginTop: 3,\n                    itemMarginBottom: 5,\n                    navigation: {\n                        enabled: false,\n                    },\n                    labelFormatter: labelFormatter(legendWidth, chartWidth - 160),\n                },\n                title: false,\n                plotOptions: {\n                    allowPointSelect: true,\n                    series: {\n                        animation: isInteractive,\n                    },\n                    pie: {\n                        size: \'100%\',\n                        shadow: false,\n                        enableMouseTracking: false,\n                        animation: false,\n                        center: [centerVer, centerHor],\n                        showInLegend: hasLegend,\n                        dataLabels: {\n                            enabled: !hasLegend,\n                            format: \'<b>{point.label}</b><br />({point.percentage:.2f} %)\',\n                            style: {\n                                color: \'#999999\',\n                            },\n                        },\n                        startAngle: data.startAngle || 0,\n                        borderWidth: 1,\n                    },\n                },\n                series: [\n                    {\n                        enableMouseTracking: isInteractive,\n                        size: outerSize,\n                        innerSize,\n                        data,\n                        states: {\n                            hover: {\n                                enabled: false,\n                                halo: false,\n                            },\n                        },\n                    },\n                ],\n            };\n\n            if (hasLegend) {\n                if (data.length * LINE_HEIGHT_WITH_LEGEND + 20 > height) {\n                    chartOptions.chart.height = data.length * LINE_HEIGHT_WITH_LEGEND + 30;\n                }\n\n                Highcharts.chart(chartId, chartOptions);\n\n                const legendLabelWidth = helper.getMaxLegendLabel(chartEl);\n                const legendValueWidth = helper.getMaxLegendValue(chartEl);\n                const realLegendLineWidth = legendLabelWidth + legendValueWidth;\n                let chartLegendLineWidth = chartWidth - 160;\n\n                chartLegendLineWidth =\n                    chartLegendLineWidth < realLegendLineWidth\n                        ? legendLabelWidth\n                        : chartLegendLineWidth;\n\n                chartOptions.legend.labelFormatter = labelFormatter(\n                    legendLabelWidth + \'px\',\n                    chartLegendLineWidth + \'px\',\n                );\n\n                if (chartLegendLineWidth < realLegendLineWidth) {\n                    chartOptions.legend.lineHeight = 30;\n                    if (data.length * 35 > height) {\n                        chartOptions.chart.height = data.length * 35 + 70;\n                    }\n                }\n            }\n\n            Highcharts.chart(chartId, chartOptions);\n        })();\n    \n<\/script>\n    </div>\n</div>\n'}}]);