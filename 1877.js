"use strict";(self.webpackChunk_my_reports_widgets=self.webpackChunk_my_reports_widgets||[]).push([[1877],{1877:(n,t,e)=>{e.r(t),e.d(t,{default:()=>a});const a='\n<div class="myreports-widget-pdf page-vertical myreports-widget-BacklinksFollowVsNofollow">\n    <div class="myreports-widget-content page-vertical-content">\n        \n<div class="myreports-widget-header" >\n    Backlinks: Follow vs Nofollow</div>\n\n\n\n<div class="myreports-widget-div myreports-widget-domain">\n    Root Domain: ebay.com</div>\n\n<div class="myreports-widget-block myreports-chart-bar-bullet">\n    \n    <div class="myreports-widget-chart-stacked myreports-widget-chart" id="chart-ineca1op"></div>\n\n<script type="text/javascript">\n    (function () {\n            const data = [{"label":"Nofollow (1.3B)","data":[28],"value":28,"name":null},{"label":"Follow (3.3B)","data":[72],"value":72,"name":null}];\n\n            const categories = [];\n            const mainIndex = 0;\n            const colors = ["#1466b4","#269e22"];\n\n            const max = _.max(data[0].data);\n            const hasLegend = 0;\n            const showLabels = 0;\n\n            const chartId = "chart-ineca1op";\n            const chartEl = document.getElementById(chartId);\n            const chartWidth = helper.getElementWidth(chartEl);\n            const units = "";\n            const additionalLabelFormatter = false;\n\n            const isInteractive = false;\n\n            const series = data.map(item => ({ ...item, enableMouseTracking: isInteractive }));\n\n            const chartOptions = {\n                chart: {\n                    type: \'bar\',\n                    height: 50,\n                    marginLeft: 0,\n                    marginRight: 0,\n                    renderTo: chartId,\n                },\n                credits: {\n                    enabled: false,\n                },\n                title: {\n                    text: \'\',\n                },\n                tooltip: {\n                    enabled: isInteractive,\n                },\n                xAxis: {\n                    margin: 0,\n                    padding: 0,\n                    categories: [\'\'],\n                    visible: false,\n                },\n                yAxis: {\n                    margin: 0,\n                    padding: 0,\n                    title: {\n                        enabled: false,\n                    },\n                    labels: {\n                        enabled: false,\n                    },\n                    gridLineWidth: 0,\n                },\n                plotOptions: {\n                    bar: {\n                        label: {\n                            enabled: false,\n                        },\n                        pointPlacement: \'between\',\n                        groupPadding: 0,\n                        pointPadding: 0,\n                        pointWidth: 30,\n                        stacking: \'percent\',\n                        animation: false,\n                    },\n                },\n                colors,\n                series,\n            };\n\n            function labelFormatter(lineWidth, labelWidth) {\n                return function () {\n                    const options = this.userOptions;\n                    let text = options.value || \'\';\n\n                    if (options.additionalText) {\n                        text +=\n                            \' <span style="color: \' +\n                            options.colorAdditionalText +\n                            \'">\' +\n                            options.additionalText +\n                            \' \' +\n                            units +\n                            \'</span>\';\n                    } else {\n                        text += \' \' + units;\n                    }\n\n                    return (\n                        \'<ul class="chart-legend-line" style="display: block; width: \' +\n                        lineWidth +\n                        \'px">\' +\n                        \'<li class="chart-legend-label" style="display: inline; width: \' +\n                        labelWidth +\n                        \'px;">\' +\n                        options.label +\n                        \'</li>\' +\n                        \'<li class="chart-legend-value" style="display: inline; float: none;">\' +\n                        text +\n                        \'</li>\' +\n                        \'</ul>\'\n                    );\n                };\n            }\n\n            if (hasLegend) {\n                chartOptions.chart.height = 150;\n                chartOptions.legend = {\n                    layout: \'horizontal\',\n                    align: \'left\',\n                    verticalAlign: \'top\',\n                    reversed: true,\n                    symbolHeight: 12,\n                    symbolWidth: 12,\n                    symbolRadius: 6,\n                    itemDistance: 10,\n                    floating: true,\n                    y: 20,\n                    x: -15,\n                    navigation: {\n                        enabled: false,\n                    },\n                };\n            } else {\n                chartOptions.legend = {\n                    enabled: false,\n                };\n            }\n\n            if (hasLegend && additionalLabelFormatter) {\n                chartOptions.chart.height = data.length * 22 + 50;\n                chartOptions.legend = {\n                    layout: \'vertical\',\n                    align: \'left\',\n                    verticalAlign: \'top\',\n                    reversed: true,\n                    floating: true,\n                    useHTML: true,\n                    symbolHeight: 12,\n                    symbolWidth: 12,\n                    itemDistance: 10,\n                    itemMarginBottom: 15,\n                    symbolRadius: 2,\n                    lineHeight: 22,\n                    y: 22,\n                    x: -18,\n                    labelFormatter: labelFormatter(520, 270),\n                    navigation: {\n                        enabled: false,\n                    },\n                };\n\n                const legendLineWidth = helper.getLegendLineWidth(chartEl);\n\n                if (chartWidth < legendLineWidth) {\n                    var legendLineWidthResult = chartWidth - 30;\n                    var legendLabelWidth = chartWidth - 210;\n                    chartOptions.legend.labelFormatter = labelFormatter(\n                        legendLineWidthResult,\n                        legendLabelWidth,\n                    );\n                    chartOptions.chart.height = data.length * 25 + 50;\n                }\n            }\n\n            if (showLabels) {\n                chartOptions.chart.height = data.length * 80;\n\n                chartOptions.xAxis.labels = {\n                    enabled: true,\n                    align: \'left\',\n                    x: 0,\n                    y: -15,\n                    style: {\n                        color: \'#999999\',\n                        fontSize: \'13px\',\n                    },\n                    formatter: (function (index) {\n                        return function () {\n                            index = index === categories.length - 1 ? 0 : index + 1;\n                            if (index === mainIndex) {\n                                this.value =\n                                    \'<tspan style="color: #333333; font-weight: bold">\' +\n                                    this.value +\n                                    \'</tspan>\';\n                            }\n                            return this.value;\n                        };\n                    })(-1),\n                };\n\n                chartOptions.yAxis.stackLabels = {\n                    enabled: true,\n                    style: {\n                        fontWeight: \'bold\',\n                        color: \'#000000\',\n                        fontSize: \'12px\',\n                        lineHeight: \'15px\',\n                    },\n                    formatter: function () {\n                        return window.helper.formatThousands(this.cum);\n                    },\n                };\n\n                chartOptions.plotOptions.dataLabels = {\n                    align: \'left\',\n                    enabled: true,\n                    padding: 1,\n                    y: -2,\n                    style: {\n                        fontSize: \'11px\',\n                        color: \'#ffffff\',\n                        fontWeight: \'bold\',\n                    },\n                    formatter: function () {\n                        if (this.y / max > 0.1) {\n                            return window.helper.roundNum(this.y);\n                        }\n                        return \'\';\n                    },\n                };\n            }\n\n            chartOptions.chart.width = chartWidth;\n\n            Highcharts.chart(chartId, chartOptions);\n console.log("loaded")       })();\n   \n<\/script>\n\n<table class="myreports-widget-table page-table-content chart-legend-group">\n    \n\n\n<tbody class="myreports-widget-tbody">\n    \n\n\n<tr class="myreports-widget-tr">\n    \n\n\n<td class="myreports-widget-td" style="color: #269e22" width="72%">\n    \n<div class="myreports-widget-block chart-bullet-legend">\n    \n<div class="myreports-widget-block chart-bullet-legend-perc">\n    \n<span class="myreports-widget-text">\n    72%</span>\n</div>\n\n<div class="myreports-widget-block chart-bullet-legend-label">\n    \n<span class="myreports-widget-text">\n    Follow (3.3B)</span>\n</div>\n</div>\n</td>\n\n\n\n<td class="myreports-widget-td" style="color: #1466b4" width="28%">\n    \n<div class="myreports-widget-block chart-bullet-legend">\n    \n<div class="myreports-widget-block chart-bullet-legend-perc">\n    \n<span class="myreports-widget-text">\n    28%</span>\n</div>\n\n<div class="myreports-widget-block chart-bullet-legend-label">\n    \n<span class="myreports-widget-text">\n    Nofollow (1.3B)</span>\n</div>\n</div>\n</td>\n</tr>\n</tbody>\n</table></div>\n    </div>\n</div>\n'}}]);